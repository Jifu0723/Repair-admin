<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gxuwz.wyrepair.mapper.RepairExpectTypeMapper">
    
    <resultMap type="RepairExpectType" id="RepairExpectTypeResult">
        <result property="repexpectTypeId"    column="repexpect_type_id"    />
        <result property="repexpectType"    column="repexpect_type"    />
    </resultMap>

    <sql id="selectRepairExpectTypeVo">
        select repexpect_type_id, repexpect_type from repair_expect_type
    </sql>

    <select id="selectRepairExpectTypeList" parameterType="RepairExpectType" resultMap="RepairExpectTypeResult">
        <include refid="selectRepairExpectTypeVo"/>
        <where>
            <if test="repexpectTypeId != null  and repexpectTypeId != ''"> and repexpect_type_id = #{repexpectTypeId}</if>
            <if test="repexpectType != null  and repexpectType != ''"> and repexpect_type = #{repexpectType}</if>
        </where>
    </select>
    
    <select id="selectRepairExpectTypeById" parameterType="Long" resultMap="RepairExpectTypeResult">
        <include refid="selectRepairExpectTypeVo"/>
        where repexpect_type_id = #{repexpectTypeId}
    </select>
        
    <insert id="insertRepairExpectType" parameterType="RepairExpectType" useGeneratedKeys="true" keyProperty="repexpectTypeId">
        insert into repair_expect_type
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="repexpectType != null">repexpect_type,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="repexpectType != null">#{repexpectType},</if>
         </trim>
    </insert>

    <update id="updateRepairExpectType" parameterType="RepairExpectType">
        update repair_expect_type
        <trim prefix="SET" suffixOverrides=",">
            <if test="repexpectType != null">repexpect_type = #{repexpectType},</if>
        </trim>
        where repexpect_type_id = #{repexpectTypeId}
    </update>

    <delete id="deleteRepairExpectTypeById" parameterType="Long">
        delete from repair_expect_type where repexpect_type_id = #{repexpectTypeId}
    </delete>

    <delete id="deleteRepairExpectTypeByIds" parameterType="String">
        delete from repair_expect_type where repexpect_type_id in 
        <foreach item="repexpectTypeId" collection="array" open="(" separator="," close=")">
            #{repexpectTypeId}
        </foreach>
    </delete>
</mapper>