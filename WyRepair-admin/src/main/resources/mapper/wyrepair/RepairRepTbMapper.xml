<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.gxuwz.wyrepair.mapper.RepairRepTbMapper">

    <resultMap type="RepairRepTb" id="RepairRepTbResult">
        <result property="repairId" column="repair_id"/>
        <result property="repairNo" column="repair_no"/>
        <result property="repairAddress" column="repair_address"/>
        <result property="repairContent" column="repair_content"/>
        <result property="repairMoney" column="repair_money"/>
        <result property="repairType" column="repair_type"/>
        <result property="repairExpectType" column="repair_expect_type"/>
        <result property="repairExpectTime" column="repair_expect_time"/>
        <result property="repairState" column="repair_state"/>
        <result property="repairedState" column="repaired_state"/>
        <result property="repairDestory" column="repair_destory"/>
        <result property="repairTransfer" column="repair_transfer"/>
        <result property="repairComment" column="repair_comment"/>
        <result property="curWork" column="cur_work"/>
        <result property="repairDep" column="repair_dep"/>
        <result property="applyId" column="apply_id"/>
        <result property="repairDestoryTime" column="repair_destory_time"/>
        <result property="repairCreateTime" column="repair_create_time"/>
        <result property="repairIsDelete" column="repair_is_delete"/>
        <result property="repairYear"    column="repair_year"    />
        <result property="repairMonth"    column="repair_month"    />
        <result property="repairDay"    column="repair_day"    />
        <result property="repairName"    column="repair_name"    />
        <result property="repaireName"    column="repaire_name"    />
        <result property="repaireId"    column="repaire_id"    />
        <!-- 维修类型 -->
        <association property="repType" javaType="com.gxuwz.wyrepair.domain.RepairReptype">
            <result property="repairTypeId" column="repairtypeid"/>
            <result property="repairType" column="repairtype"/>
        </association>
        <!--报修单与申请单一对一关系-->
        <association property="apply" javaType="com.gxuwz.wyrepair.domain.RepairApply">
            <result property="applyUserid" column="apply_userid"/>
            <result property="applyUser" column="apply_user"/>
            <result property="applyRole" column="apply_role"/>
        </association>
        <!--报修单与评论一对一关系-->
        <association property="repcomment" javaType="com.gxuwz.wyrepair.domain.RepairRepcomment">
            <result property="repcommentId" column="repcomment_id"/>
            <result property="repcommentContent" column="repcomment_content"/>
            <result property="repcommentService" column="repcomment_service"/>
            <result property="repcommenCrteateTime" column="repcommen_crteate_time"/>
        </association>
        <!--报修单与报修图片图片一对多关系-->
        <collection property="repImgList" ofType="com.gxuwz.wyrepair.domain.RepairRepImg">
            <result property="repimgId" column="repimg_id"/>
            <result property="repiId" column="repi_id"/>
            <result property="repimgName" column="repimg_name"/>
            <result property="repimgPath" column="repimg_path"/>
            <result property="repimgCreateTime" column="repimg_create_time"/>
            <result property="repimgIsDeleted" column="repimg_is_deleted"/>
        </collection>
        <collection property="appImgList" ofType="com.gxuwz.wyrepair.domain.RepairAppImg">
            <result property="appimgId" column="appimg_id"/>
            <result property="appId" column="app_id"/>
            <result property="appimgName" column="appimg_name"/>
            <result property="appimgPath" column="appimg_path"/>
            <result property="appimgCreateTime" column="appimg_create_time"/>
            <result property="appimgIsDeleted" column="appimg_is_deleted"/>
        </collection>
        <!--报修单与维修过程一对多关系-->
        <collection property="processList" ofType="com.gxuwz.wyrepair.domain.RepairProcess">
            <result property="processId" column="p_process_id"/>
            <result property="repaireId" column="p_repaire_id"/>
            <result property="repaireNo" column="p_repaire_no"/>
            <result property="applyId" column="p_p_apply_id"/>
            <result property="applyNo" column="p_apply_no"/>
            <result property="repaireUserid" column="p_repair_userid"/>
            <result property="repaireName" column="p_repaire_name"/>
            <result property="repaireDep" column="p_repaire_dep"/>
            <result property="workFinish" column="p_work_finish"/>
            <result property="processDescribe" column="p_process_describe"/>
            <result property="createTime" column="p_create_time"/>
            <result property="processIsDelete" column="process_is_delete"/>
        </collection>
    </resultMap>

    <sql id="selectRepairRepTbVo">
        select repair_id,
               repair_no,
               repair_address,
               repair_content,
               repair_money,
               repair_type,
               repair_expect_type,
               repair_expect_time,
               repair_state,
               repaired_state,
               repair_destory,
               repair_transfer,
               repair_comment,
               cur_work,
               repair_dep,
               apply_id,
               repair_destory_time,
               repair_create_time,
               repair_is_delete,
               repair_year,
               repair_month,
               repair_day,
               repair_name,
               repaire_name,
               repaire_id
        from repair_rep_tb
    </sql>

    <select id="selectRepairRepTbList" parameterType="RepairRepTb" resultMap="RepairRepTbResult">
        <include refid="selectRepairRepTbVo"/>
        <where>
            <if test="repairNo != null  and repairNo != ''"> and repair_no = #{repairNo}</if>
            <if test="repairAddress != null  and repairAddress != ''"> and repair_address = #{repairAddress}</if>
            <if test="repairContent != null  and repairContent != ''"> and repair_content = #{repairContent}</if>
            <if test="repairType != null "> and repair_type = #{repairType}</if>
            <if test="repairMoney != null  and repairMoney != ''"> and repair_money = #{repairMoney}</if>
            <if test="repairExpectType != null "> and repair_expect_type = #{repairExpectType}</if>
            <if test="repairExpectTime != null "> and repair_expect_time = #{repairExpectTime}</if>
            <if test="repairState != null "> and repair_state = #{repairState}</if>
            <if test="repairedState != null "> and repaired_state = #{repairedState}</if>
            <if test="repairDestory != null "> and repair_destory = #{repairDestory}</if>
            <if test="repairTransfer != null "> and repair_transfer = #{repairTransfer}</if>
            <if test="repairDep != null "> and repair_dep = #{repairDep}</if>
            <if test="applyId != null "> and apply_id = #{applyId}</if>
            <if test="repairComment != null "> and repair_comment = #{repairComment}</if>
            <if test="repairDestoryTime != null "> and repair_destory_time = #{repairDestoryTime}</if>
            <if test="curWork != null "> and cur_work = #{curWork}</if>
            <if test="repairCreateTime != null "> and repair_create_time = #{repairCreateTime}</if>
            <if test="repairIsDelete != null "> and repair_is_delete = #{repairIsDelete}</if>
            <if test="repairYear != null "> and repair_year = #{repairYear}</if>
            <if test="repairMonth != null "> and repair_month = #{repairMonth}</if>
            <if test="repairDay != null "> and repair_day = #{repairDay}</if>
            <if test="repairName != null "> and repair_name = #{repairName}</if>
            <if test="repaireName != null "> and repaire_name = #{repaireName}</if>
            <if test="repaireId != null "> and repaire_id = #{repaireId}</if>
        </where>
    </select>

    <select id="selectRepairTotalList"   parameterType="String" resultType="Map">
        SELECT
        repair_money as repairMoney,
        repair_address as repairAddress,
        repair_content as repairContent,
        repair_month as repairMonth,
        SUM( repair_money ) AS RepairMoneyTotal,
        COUNT(*) AS RepairOrderTotal
        FROM repair_rep_tb
        <where>
            and repair_destory = 1
            <if test="repairMonth != null "> and repair_month = #{repairMonth}</if>
            <if test="repaireName != null "> and repaire_name = #{repaireName}</if>
        </where>
        GROUP BY
        repair_month
    </select>

    <select id="MonthMoneyTotal"  parameterType="String" resultType="Map">
            SELECT
            repair_money as repairMoney,
            repair_address as repairAddress,
            repair_content as repairContent,
            repair_month as repairMonth,
            SUM( repair_money ) AS RepairMoneyTotal,
            COUNT(*) AS RepairOrderTotal
            FROM repair_rep_tb
        <where>
            and repair_destory = 1
            <if test="repairMonth != null "> and repair_month = #{repairMonth}</if>
            <if test="repaireName != null "> and repaire_name = #{repaireName}</if>
        </where>
    </select>

    <select id="UserInformation"  parameterType="String" resultType="Map">
        SELECT
        u.nick_name AS nickName,
        u.phonenumber AS phonenumber,
        u.email,
        u.user_name AS userName,
        d.dept_name AS deptName ,
        b.bank_account AS bankAccount,
        b.bank_name AS bankName,
        b.bank_user AS bankUser,
        b.cardno
        FROM
        sys_user AS u
        LEFT JOIN sys_dept AS d ON d.dept_id = u.dept_id
        LEFT JOIN bank AS b ON b.user_id = u.user_id
        <where>
            <if test="userId != null "> and u.user_id = #{userId}</if>
        </where>
    </select>

    <select id="selectRepairWorkTotal"  parameterType="String" resultType="Map">
        SELECT
        repairRepTb.repaire_name AS repaireName,
        repairRepTb.repair_month AS repairMonth,
        repairRepTb.repair_type AS repairType,
        repairRepTb.repair_day AS repairDay,
        SUM( repairRepTb.repair_day AND repairRepTb.repair_destory = 1 ) AS RepairOrderTotal,
        SUM( repair_money ) AS MoneyTotal
        FROM
        repair_rep_tb AS repairRepTb
        LEFT JOIN sys_user AS u ON repairRepTb.repaire_id = u.user_id
        LEFT JOIN sys_dept AS d ON d.dept_id = u.dept_id
        <where>
            and repairRepTb.repair_destory = 1
            <if test="repairMonth != null "> and repairRepTb.repair_month = #{repairMonth}</if>
            <if test="repaireName != null "> and repairRepTb.repaire_name = #{repaireName}</if>
        </where>
        GROUP BY
        repairRepTb.repair_day
    </select>

    <select id="RepairTotalList" resultMap="RepairRepTbResult" parameterType="map">
        select
        repair_id,
        repair_no,
        repair_address,
        repair_content,
        repair_money,
        repair_type,
        repair_expect_type,
        repair_expect_time,
        repair_state,
        repaired_state,
        repair_destory,
        repair_transfer,
        repair_comment,
        cur_work,
        repair_dep,
        apply_id,
        repair_destory_time,
        repair_create_time,
        repair_is_delete,
        repair_year,
        repair_month,
        repair_day,
        repair_name,
        repaire_name,
        repaire_id
        from repair_rep_tb
        <where>
            and repair_comment = 1
            and repair_destory = 1
            <if test="repairMonth != null "> and repair_month = #{repairMonth}</if>
            <if test="repaireName != null "> and repaire_name = #{repaireName}</if>
        </where>
    </select>

    <select id="selectRepairPersonRepTbList" resultMap="RepairRepTbResult">
        select
        tb.repair_id,
        tb.repair_no,
        tb.repair_address,
        tb.repair_content,
        tb.repair_money,
        tb.repair_type,
        tb.repair_expect_type,
        tb.repair_expect_time,
        tb.repair_state,
        tb.repaired_state,
        tb.repair_destory,
        tb.repair_transfer,
        tb.repair_comment,
        tb.cur_work,
        tb.repair_dep,
        tb.apply_id,
        tb.repair_destory_time,
        tb.repair_create_time,
        tb.repair_is_delete,
        tb.repair_year,
        tb.repair_month,
        tb.repair_day,
        tb.repair_name,
        tb.repaire_name,
        tb.repaire_id,
        /*维修专员查询不连维修过程表*/
        <if test="repairUserid != null ">
            process.process_id as p_process_id,
            process.repaire_id as p_repaire_id,
            process.apply_id as p_apply_id,
            process.repaire_no as p_repaire_no,
            process.apply_no as p_apply_no,
            process.repaire_name as p_repaire_name,
            process.repaire_dep as p_repaire_dep,
            process.work_finish as p_work_finish,
            process.process_describe as p_process_describe,
            process.create_time as p_create_time,
        </if>
        c.repcomment_id,
        c.repcomment_content,
        c.repcomment_service,
        c.repcommen_crteate_time,
        appImg.*,
        rtype.repair_type as repairtype,
        apply.apply_user
        from repair_rep_tb as tb
        left join repair_app_img as appImg on tb.apply_id = appImg.app_id
        left join repair_apply as apply on tb.apply_id = apply.apply_id
        left join repair_reptype as rtype on tb.repair_type = rtype.repair_type_id
        <if test="repairUserid != null ">
            left join repair_process as process on tb.repair_id = process.repaire_id
        </if>
        left join repair_repcomment as c on tb.repair_id=c.repc_id
        <where>
            <if test="repTb.repairNo != null  and repTb.repairNo != ''">
                and tb.repair_no = #{repTb.repairNo}
            </if>
            <if test="repTb.repairAddress != null  and repTb.repairAddress != ''">
                and tb.repair_address =#{repTb.repairAddress}
            </if>
            <if test="repTb.repairContent != null  and repTb.repairContent != ''">
                and tb.repair_content =#{repTb.repairContent}
            </if>
            <if test="repTb.repairMoney != null ">
                and tb.repair_money = #{repTb.repairMoney}
            </if>
            <if test="repTb.repairType != null ">
                and tb.repair_type = #{repTb.repairType}
            </if>
            <if test="repTb.repairExpectType != null ">
                and tb.repair_expect_type = #{repTb.repairExpectType}
            </if>
            <if test="repTb.repairExpectTime != null ">
                and tb.repair_expect_time = #{repTb.repairExpectTime}
            </if>
            <if test="repTb.repairState != null ">
                and tb.repair_state = #{repTb.repairState}
            </if>
            <if test="repTb.repairedState != null ">
                and tb.repaired_state = #{repTb.repairedState}
            </if>
            <if test="repTb.repairDestory != null ">
                and tb.repair_destory = #{repTb.repairDestory}
            </if>
            <if test="repTb.repairTransfer != null ">
                and tb.repair_transfer = #{repTb.repairTransfer}
            </if>
            <if test="repTb.curWork != null ">
                and tb.cur_work = #{repTb.curWork}
            </if>
            <if test="repTb.repairDep != null ">
                and tb.repair_dep = #{repTb.repairDep}
            </if>
            <if test="repTb.applyId != null ">
                and tb.apply_id = #{repTb.applyId}
            </if>
            <if test="repTb.repairDestoryTime != null ">
                and tb.repair_destory_time = #{repTb.repairDestoryTime}
            </if>
            <if test="repTb.repairCreateTime != null ">
                and tb.repair_create_time = #{repTb.repairCreateTime}
            </if>
            <if test="repTb.repairIsDelete != null ">
                and tb.repair_is_delete = #{repTb.repairIsDelete}
            </if>
            <if test="repTb.repairYear != null ">
                and tb.repair_year = #{repTb.repairYear}
            </if>
            <if test="repTb.repairMonth != null ">
                and tb.repair_month = #{repTb.repairMonth}
            </if>
            <if test="repTb.repairDay != null ">
                and tb.repair_day = #{repTb.repairDay}
            </if>
            <if test="repTb.repairName != null ">
                and tb.repair_name = #{repTb.repairName}
            </if>
            <if test="repTb.repaireName != null ">
                and tb.repaire_name = #{repTb.repaireName}
            </if>
            <if test="repTb.repaireId != null ">
                and tb.repaire_id = #{repTb.repaireId}
            </if>
            <if test="repairUserid != null ">
                and process.repaire_userid = #{repairUserid}
            </if>
        </where>
        order by tb.repair_id desc
    </select>

    <select id="selectRepairTbListOfOthers" resultMap="RepairRepTbResult">
        select
        tb.repair_id,
        tb.repair_no,
        tb.repair_address,
        tb.repair_content,
        tb.repair_money,
        tb.repair_type,
        tb.repair_expect_type,
        tb.repair_expect_time,
        tb.repair_state,
        tb.repaired_state,
        tb.repair_destory,
        tb.repair_transfer,
        tb.repair_comment,
        tb.cur_work,
        tb.repair_dep,
        tb.apply_id,
        tb.repair_destory_time,
        tb.repair_create_time,
        tb.repair_is_delete,
        tb.repair_year,
        tb.repair_month,
        tb.repair_day,
        tb.repair_name,
        tb.repaire_name,
        tb.repaire_id,
        appImg.*,
        c.repcomment_content,
        c.repcomment_service,
        c.repcommen_userid,
        c.repcommen_crteate_time,
        rtype.repair_type as repairtype,
        apply.apply_userid,
        apply.apply_user,
        apply.apply_role
        from repair_rep_tb as tb
        left join repair_app_img as appImg on tb.apply_id = appImg.app_id
        left join repair_apply as apply on tb.apply_id = apply.apply_id
        left join repair_reptype as rtype on tb.repair_type = rtype.repair_type_id
        left join repair_repcomment as c on tb.repair_id = c.repc_id
        <where>
            <if test="applyUserId != null  and applyUserId != ''">
                and apply.apply_userid = #{applyUserId}
            </if>
            <if test="repTb.repairNo != null  and repTb.repairNo != ''">
                and tb.repair_no = #{repTb.repairNo}
            </if>
            <if test="repTb.repairAddress != null  and repTb.repairAddress != ''">
                and tb.repair_address =#{repTb.repairAddress}
            </if>
            <if test="repTb.repairContent != null  and repTb.repairContent != ''">
                and tb.repair_content =#{repTb.repairContent}
            </if>
            <if test="repTb.repairMoney != null  and repTb.repairMoney != ''">
                and tb.repair_money =#{repTb.repairMoney}
            </if>
            <if test="repTb.repairExpectType != null ">
                and tb.repair_expect_type = #{repTb.repairExpectType}
            </if>
            <if test="repTb.repairType != null ">
                and tb.repair_type = #{repTb.repairType}
            </if>
            <if test="repTb.repairExpectTime != null ">
                and tb.repair_expect_time = #{repTb.repairExpectTime}
            </if>
            <if test="repTb.repairState != null ">
                and tb.repair_state = #{repTb.repairState}
            </if>
            <if test="repTb.repairedState != null ">
                and tb.repaired_state = #{repTb.repairedState}
            </if>
            <if test="repTb.repairDestory != null ">
                and tb.repair_destory = #{repTb.repairDestory}
            </if>
            <if test="repTb.repairTransfer != null ">
                and tb.repair_transfer = #{repTb.repairTransfer}
            </if>
            <if test="repTb.curWork != null ">
                and tb.cur_work = #{repTb.curWork}
            </if>
            <if test="repTb.repairDep != null ">
                and tb.repair_dep = #{repTb.repairDep}
            </if>
            <if test="repTb.applyId != null ">
                and tb.apply_id = #{repTb.applyId}
            </if>
            <if test="repTb.repairDestoryTime != null ">
                and tb.repair_destory_time = #{repTb.repairDestoryTime}
            </if>
            <if test="repTb.repairCreateTime != null ">
                and tb.repair_create_time = #{repTb.repairCreateTime}
            </if>
            <if test="repTb.repairIsDelete != null ">
                and tb.repair_is_delete = #{repTb.repairIsDelete}
            </if>
            <if test="repTb.repairYear != null ">
                and tb.repair_year = #{repTb.repairYear}
            </if>
            <if test="repTb.repairMonth != null ">
                and tb.repair_month = #{repTb.repairMonth}
            </if>
            <if test="repTb.repairDay != null ">
                and tb.repair_day = #{repTb.repairDay}
            </if>
            <if test="repTb.repairName != null ">
                and tb.repair_name = #{repTb.repairName}
            </if>
            <if test="repTb.repaireName != null ">
                and tb.repaire_name = #{repTb.repaireName}
            </if>
            <if test="repTb.repaireId != null ">
                and tb.repaire_id = #{repTb.repaireId}
            </if>
        </where>
        order by tb.repair_id desc
    </select>

    <select id="selectRepairRepTbById" parameterType="Long" resultMap="RepairRepTbResult">
        <include refid="selectRepairRepTbVo"/>
        where repair_id = #{repairId}
    </select>

    <select id="selectRepairId" parameterType="Long" resultMap="RepairRepTbResult">
        SELECT
            rtb.repair_address AS repairAddress,
            rtb.repair_content AS repairContent,
            rtb.repair_name AS repairName,
            rtb.repair_id AS repairId,
            rtype.repair_type AS repairType
            FROM repair_rep_tb AS rtb
            LEFT JOIN repair_reptype AS rtype ON  rtype.repair_type_id = rtb.repair_type
        <where>
            <if test="repairId != null "> and rtb.repair_id = #{repairId}</if>
        </where>
    </select>

    <insert id="insertRepairRepTb" parameterType="RepairRepTb" useGeneratedKeys="true" keyProperty="repairId">
        insert into repair_rep_tb
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="repairNo != null">repair_no,</if>
            <if test="repairAddress != null">repair_address,</if>
            <if test="repairContent != null">repair_content,</if>
            <if test="repairMoney != null">repair_money,</if>
            <if test="repairType != null">repair_type,</if>
            <if test="repairExpectType != null">repair_expect_type,</if>
            <if test="repairExpectTime != null">repair_expect_time,</if>
            <if test="repairState != null">repair_state,</if>
            <if test="repairedState != null">repaired_state,</if>
            <if test="repairDestory != null">repair_destory,</if>
            <if test="repairTransfer != null">repair_transfer,</if>
            <if test="repairComment != null">repair_comment,</if>
            <if test="curWork != null">cur_work,</if>
            <if test="repairDep != null">repair_dep,</if>
            <if test="applyId != null">apply_id,</if>
            <if test="repairDestoryTime != null">repair_destory_time,</if>
            <if test="repairCreateTime != null">repair_create_time,</if>
            <if test="repairIsDelete != null">repair_is_delete,</if>
            <if test="repairYear != null">repair_year,</if>
            <if test="repairMonth != null">repair_month,</if>
            <if test="repairDay != null">repair_day,</if>
            <if test="repairName != null">repair_name,</if>
            <if test="repaireName != null">repaire_name,</if>
            <if test="repaireId != null">repaire_id,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="repairNo != null">#{repairNo},</if>
            <if test="repairAddress != null">#{repairAddress},</if>
            <if test="repairContent != null">#{repairContent},</if>
            <if test="repairMoney != null">#{repairMoney},</if>
            <if test="repairType != null">#{repairType},</if>
            <if test="repairExpectType != null">#{repairExpectType},</if>
            <if test="repairExpectTime != null">#{repairExpectTime},</if>
            <if test="repairState != null">#{repairState},</if>
            <if test="repairedState != null">#{repairedState},</if>
            <if test="repairDestory != null">#{repairDestory},</if>
            <if test="repairTransfer != null">#{repairTransfer},</if>
            <if test="repairComment != null">#{repairComment},</if>
            <if test="curWork != null">#{curWork},</if>
            <if test="repairDep != null">#{repairDep},</if>
            <if test="applyId != null">#{applyId},</if>
            <if test="repairDestoryTime != null">#{repairDestoryTime},</if>
            <if test="repairCreateTime != null">#{repairCreateTime},</if>
            <if test="repairIsDelete != null">#{repairIsDelete},</if>
            <if test="repairYear != null">#{repairYear},</if>
            <if test="repairMonth != null">#{repairMonth},</if>
            <if test="repairDay != null">#{repairDay},</if>
            <if test="repairName != null">#{repairName},</if>
            <if test="repaireName != null">#{repaireName},</if>
            <if test="repaireId != null">#{repaireId},</if>
        </trim>
    </insert>

    <update id="updateRepairRepTb" parameterType="RepairRepTb">
        update repair_rep_tb
        <trim prefix="SET" suffixOverrides=",">
            <if test="repairNo != null">repair_no = #{repairNo},</if>
            <if test="repairAddress != null">repair_address = #{repairAddress},</if>
            <if test="repairContent != null">repair_content = #{repairContent},</if>
            <if test="repairMoney != null">repair_money = #{repairMoney},</if>
            <if test="repairType != null">repair_type = #{repairType},</if>
            <if test="repairExpectType != null">repair_expect_type = #{repairExpectType},</if>
            <if test="repairExpectTime != null">repair_expect_time = #{repairExpectTime},</if>
            <if test="repairState != null">repair_state = #{repairState},</if>
            <if test="repairedState != null">repaired_state = #{repairedState},</if>
            <if test="repairDestory != null">repair_destory = #{repairDestory},</if>
            <if test="repairTransfer != null">repair_transfer = #{repairTransfer},</if>
            <if test="repairComment != null">repair_comment = #{repairComment},</if>
            <if test="curWork != null">cur_work = #{curWork},</if>
            <if test="repairDep != null">repair_dep = #{repairDep},</if>
            <if test="applyId != null">apply_id = #{applyId},</if>
            <if test="repairDestoryTime != null">repair_destory_time = #{repairDestoryTime},</if>
            <if test="repairCreateTime != null">repair_create_time = #{repairCreateTime},</if>
            <if test="repairIsDelete != null">repair_is_delete = #{repairIsDelete},</if>
            <if test="repairYear != null">repair_year = #{repairYear},</if>
            <if test="repairMonth != null">repair_month = #{repairMonth},</if>
            <if test="repairDay != null">repair_day = #{repairDay},</if>
            <if test="repairName != null">repair_name = #{repairName},</if>
            <if test="repaireName != null">repaire_name = #{repaireName},</if>
            <if test="repaireId != null">repaire_id = #{repaireId},</if>
        </trim>
        where repair_id = #{repairId}
    </update>

    <delete id="deleteRepairRepTbById" parameterType="Long">
        delete
        from repair_rep_tb
        where repair_id = #{repairId}
    </delete>

    <delete id="deleteRepairRepTbByIds" parameterType="String">
        delete from repair_rep_tb where repair_id in
        <foreach item="repairId" collection="array" open="(" separator="," close=")">
            #{repairId}
        </foreach>
    </delete>

    <!-- 维修专员按报修时间、报修类型、维修人员姓名、设备维修后状态、报修人姓名统计报修信息输出日、周、月列表-->
    <select id="queryRepairAdminOrderList" parameterType="map" resultMap="RepairRepTbResult">
        <include refid="selectRepairRepTbVo"/>
        <where>
            <if test="repairDep != null and repairDep != ''">and repair_dep = #{repairDep}</if>
            <if test="repaireName != null  and repaireName != ''"> and repaire_name = #{repaireName}</if>
            <if test="repairedState != null  and repairedState != ''"> and repaired_state = #{repairedState}</if>
            <if test="repairName != null  and repairName != ''"> and repair_name = #{repairName}</if>
            <if test="repairYear != null  and repairYear != ''"> and repair_year = #{repairYear}</if>
            <if test="repairMonth != null  and repairMonth != ''"> and repair_month = #{repairMonth}</if>
            <if test="repairDay != null  and repairDay != ''"> and repair_day = #{repairDay}</if>
            <if test="repairType != null and repairType != ''"> and repair_type = #{repairType}</if>
            <!--查询当天的报餐数据-->
            <if test="countType == 1 and repairTime != null"> and to_days(repair_create_time) = to_days(#{repairTime})</if>
            <if test="countType == 1 and repairDep != null"> and repair_dep = #{repairDep}</if>
            <if test="repairTime != null and countType == null "> and to_days(repair_create_time) = to_days(#{repairTime})</if>
            <!--查询当周的报餐数据-->
            <if test="countType == 2 and repairDep != null"> and repair_dep = #{repairDep}</if>
            <if test="countType == 2 and repairTime != null"> and YEARWEEK(date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1)</if>
            <!--查询当月的报餐数据-->
            <if test="countType == 3 and repairDep != null"> and repair_dep = #{repairDep}</if>
            <if test="countType == 3 and repairTime != null"> and MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime})</if>
        </where>
    </select>

    <!-- 维修专员按报修时间、报修类型、维修人员姓名、设备维修后状态、报修人姓名统计报修信息输出日、周、月报表-->
    <select id="countrepairAdminTimeByrepairType" parameterType="String" resultType="map">
        select
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) AND repair_dep = #{repairDep}) as dayRepairTotal,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 1 AND repair_dep = #{repairDep}) as dnetRepairNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 2 AND repair_dep = #{repairDep}) as dHyRepairNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 3 AND repair_dep = #{repairDep}) as dFaRepairFoodNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 4 AND repair_dep = #{repairDep}) as dOfRepairFoodNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 6 AND repair_dep = #{repairDep}) as dTeaeleRepairNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 7 AND repair_dep = #{repairDep}) as dEleRepairNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 8 AND repair_dep = #{repairDep}) as dWoodRepairNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) AND repair_dep = #{repairDep}) as weekRepairTotal,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 1 AND repair_dep = #{repairDep}) as wnetRepairNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 2 AND repair_dep = #{repairDep}) as wHyRepairNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 3 AND repair_dep = #{repairDep}) as wFaRepairFoodNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 4 AND repair_dep = #{repairDep}) as wOfRepairFoodNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 6 AND repair_dep = #{repairDep}) as wTeaeleRepairNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 7 AND repair_dep = #{repairDep}) as wEleRepairNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 8 AND repair_dep = #{repairDep}) as wWoodRepairNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) AND repair_dep = #{repairDep}) as monthRepairTotal,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 1 AND repair_dep = #{repairDep}) as mnetRepairNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 2 AND repair_dep = #{repairDep}) as mHyRepairNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 3 AND repair_dep = #{repairDep}) as mFaRepairFoodNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 4 AND repair_dep = #{repairDep}) as mOfRepairFoodNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 6 AND repair_dep = #{repairDep}) as mTeaeleRepairNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 7 AND repair_dep = #{repairDep}) as mEleRepairNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 8 AND repair_dep = #{repairDep}) as mWoodRepairNumber
        from repair_rep_tb
        <where>
            <if test="repairType != null and repairType != ''">and repair_type = #{repairType}</if>
            <if test="repairName != null  and repairName != ''"> and repair_name = #{repairName}</if>
            <if test="repaireName != null  and repaireName != ''"> and repaire_name = #{repaireName}</if>
            <if test="repairedState != null  and repairedState != ''"> and repaired_state = #{repairedState}</if>
        </where>
    </select>

    <!-- 后勤部门管理员按报修时间、报修类型、维修人员姓名、设备维修后状态、报修人姓名统计报修信息输出日、周、月列表-->
    <select id="queryRepairOrderList" parameterType="map" resultMap="RepairRepTbResult">
        <include refid="selectRepairRepTbVo"/>
        <where>
            <if test="repairDep != null and repairDep != ''">and repair_dep = #{repairDep}</if>
            <if test="repaireName != null  and repaireName != ''"> and repaire_name = #{repaireName}</if>
            <if test="repairedState != null  and repairedState != ''"> and repaired_state = #{repairedState}</if>
            <if test="repairName != null  and repairName != ''"> and repair_name = #{repairName}</if>
            <if test="repairYear != null  and repairYear != ''"> and repair_year = #{repairYear}</if>
            <if test="repairMonth != null  and repairMonth != ''"> and repair_month = #{repairMonth}</if>
            <if test="repairDay != null  and repairDay != ''"> and repair_day = #{repairDay}</if>
            <if test="repairType != null and repairType != ''"> and repair_type = #{repairType}</if>
            <!--查询当天的报餐数据-->
            <if test="countType == 1 and repairTime != null"> and to_days(repair_create_time) = to_days(#{repairTime})</if>
            <if test="repairTime != null and countType == null "> and to_days(repair_create_time) = to_days(#{repairTime})</if>
            <!--查询当周的报餐数据-->
            <if test="countType == 2 and repairTime != null"> and YEARWEEK(date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1)</if>
            <!--查询当月的报餐数据-->
            <if test="countType == 3 and repairTime != null"> and MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime})</if>
        </where>
    </select>


    <!-- 后勤部门管理员按二级学院id、报修时间、报修类型、维修人员姓名、设备维修后状态、报修人姓名统计报修信息输出日、周、月报表-->
    <select id="CountCollegeByRepairOrder" parameterType="String" resultType="map">
        select
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_dep = #{repairDep}) as dayRepairTotal,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 1 and repair_dep = #{repairDep}) as dnetRepairNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 2 and repair_dep = #{repairDep}) as dHyRepairNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 3 and repair_dep = #{repairDep}) as dFaRepairFoodNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 4 and repair_dep = #{repairDep}) as dOfRepairFoodNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 6 and repair_dep = #{repairDep}) as dTeaeleRepairNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 7 and repair_dep = #{repairDep}) as dEleRepairNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 8 and repair_dep = #{repairDep}) as dWoodRepairNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_dep = #{repairDep}) as weekRepairTotal,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 1 and repair_dep = #{repairDep}) as wnetRepairNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 2 and repair_dep = #{repairDep}) as wHyRepairNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 3 and repair_dep = #{repairDep}) as wFaRepairFoodNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 4 and repair_dep = #{repairDep}) as wOfRepairFoodNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 6 and repair_dep = #{repairDep}) as wTeaeleRepairNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 7 and repair_dep = #{repairDep}) as wEleRepairNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 8 and repair_dep = #{repairDep}) as wWoodRepairNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_dep = #{repairDep}) as monthRepairTotal,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 1 and repair_dep = #{repairDep}) as mnetRepairNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 2 and repair_dep = #{repairDep}) as mHyRepairNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 3 and repair_dep = #{repairDep}) as mFaRepairFoodNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 4 and repair_dep = #{repairDep}) as mOfRepairFoodNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 6 and repair_dep = #{repairDep}) as mTeaeleRepairNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 7 and repair_dep = #{repairDep}) as mEleRepairNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 8 and repair_dep = #{repairDep}) as mWoodRepairNumber
        from repair_rep_tb
        <where>
            <if test="repairType != null and repairType != ''">and repair_type = #{repairType}</if>
            <if test="repairName != null  and repairName != ''"> and repair_name = #{repairName}</if>
            <if test="repaireName != null  and repaireName != ''"> and repaire_name = #{repaireName}</if>
            <if test="repairedState != null  and repairedState != ''"> and repaired_state = #{repairedState}</if>
        </where>
    </select>

    <!-- 后勤部门管理员按报修时间、报修类型、维修人员姓名、设备维修后状态、报修人姓名统计报修信息输出日、周、月报表-->
    <select id="countrepairTimeByrepairType" parameterType="String" resultType="map">
        select
        SUM(to_days(repair_create_time) = to_days(#{repairTime})) as dayRepairTotal,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 1) as dnetRepairNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 2) as dHyRepairNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 3) as dFaRepairFoodNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 4) as dOfRepairFoodNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 6) as dTeaeleRepairNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 7) as dEleRepairNumber,
        SUM(to_days(repair_create_time) = to_days(#{repairTime}) and repair_type = 8) as dWoodRepairNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1)) as weekRepairTotal,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 1) as wnetRepairNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 2) as wHyRepairNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 3) as wFaRepairFoodNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 4) as wOfRepairFoodNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 6) as wTeaeleRepairNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 7) as wEleRepairNumber,
        SUM(YEARWEEK( date_format( repair_create_time,'%Y-%m-%d %H:%i:%s') ,1) = YEARWEEK( #{repairTime} ,1) and repair_type = 8) as wWoodRepairNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime})) as monthRepairTotal,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 1) as mnetRepairNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 2) as mHyRepairNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 3) as mFaRepairFoodNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 4) as mOfRepairFoodNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 6) as mTeaeleRepairNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 7) as mEleRepairNumber,
        SUM(MONTHNAME(repair_create_time)=MONTHNAME(#{repairTime}) and repair_type = 8) as mWoodRepairNumber
        from repair_rep_tb
        <where>
            <if test="repairType != null and repairType != ''">and repair_type = #{repairType}</if>
            <if test="repairName != null  and repairName != ''"> and repair_name = #{repairName}</if>
            <if test="repaireName != null  and repaireName != ''"> and repaire_name = #{repaireName}</if>
            <if test="repairedState != null  and repairedState != ''"> and repaired_state = #{repairedState}</if>
        </where>
    </select>
</mapper>
